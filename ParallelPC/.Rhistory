install.packages("grid")
install.packages("grid")
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(Rgraphviz)
source("http://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
library(pcalg)
## Load predefined data
data(gmG)
gmG8$x[1:5,]
n <- nrow (gmG8$ x)
V <- colnames(gmG8$ x) # labels aka node names
## estimate CPDAG
pc.fit <- pc(suffStat = list(C = cor(gmG8$x), n = n),
indepTest = gaussCItest, alpha=0.01, labels = V)
if (require(Rgraphviz)) {
## show estimated graph
par(mfrow=c(1,2))
plot(pc.fit, main = "Estimated graph")
plot(gmG8$g, main = "True DAG")
}
## Load data
data(gmD)
gmD$x[1:5,]
V <- colnames(gmD$x)
## define sufficient statistics
suffStat <- list(dm = gmD$x, nlev = c(3,2,3,4,2), adaptDF = FALSE)
## estimate the structure
pc.D <- pc(suffStat, indepTest = disCItest, alpha = 0.01, labels = V, verbose = TRUE)
#compare the graphs
if (require(Rgraphviz)) {
## show estimated CPDAG
par(mfrow = c(1,2))
plot(pc.D, main = "Estimated graph")
plot(gmD$g, main = "True DAG")
}
## Load binary data
data(gmB)
gmB$x[1:5,]
V <- colnames(gmB$x)
## estimate the structure
pc.B <- pc(suffStat = list(dm = gmB$x, adaptDF = FALSE),
indepTest = binCItest, alpha = 0.01, labels = V, verbose = TRUE)
pc.B
if (require(Rgraphviz)) {
## show estimated CPDAG
plot(pc.B, main = "Estimated CPDAG")
plot(gmB$g, main = "True DAG")
}
library(ParallelPC)
library(ParallelPC)
library(bnlearn)
library(pcalg)
data("gmG")
suffStat<-gmG$x
cor2(1,2,3,suffStat)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
?mcor
library(pcalg)
?mcor
library(ParallelPC)
library(ParallelPC)
source("http://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
library(ParallelPC)
library(ParallelPC)
find_rtools()
library(devtools)
find_rtools()
setwd("D:/Dropbox-letd/Dropbox/COLLABORATORS/SHU-Thuc/Pcalg_parallel/Datasets")
library(ParallelPC)
BR51.92 <- read.csv("D:/Dropbox-letd/Dropbox/COLLABORATORS/SHU-Thuc/Pcalg_parallel/Datasets/BR51-92.csv")
View(BR51.92)
library(pcalg)
pcSelect(BR51.92[,1592], BR51.92[,-1592], alpha=0.05)
library(pcalg)
library(parallel)
p <- 10
set.seed(101)
myDAG <- randomDAG(p, prob = 0.2)
n <- 1000
d.mat <- rmvDAG(n, myDAG, errDist = "normal")
pcSelect_stable(d.mat[,10],d.mat[,-10], alpha=0.05)
library(ParallelPC)
pcSelect(d.mat[,10],d.mat[,-10], alpha=0.05, verbose=TRUE)
pcSelect_stable(d.mat[,10],d.mat[,-10], alpha=0.05, verbose=TRUE)
pcSelect_parallel(d.mat[,10],d.mat[,-10], alpha=0.05, verbose=TRUE, numworkers=2)
pcSelect_parallel(d.mat[,10],d.mat[,-10], alpha=0.05, verbose=TRUE, num.workers=2)
pcSelect_parallel(d.mat[,10],d.mat[,-10], alpha=0.05, verbose=TRUE, num_workers=2)
setwd("D:/Dropbox-letd/Dropbox/PROJECTS-WORKING/JMLR-ParallelPC/PackagePCCIwithPCSelect")
adultAll <- read.csv("D:/Dropbox-letd/Dropbox/PROJECTS-WORKING/JMLR-ParallelPC/PackagePCCIwithPCSelect/adultAll.csv")
View(adultAll)
dim(adultAll)
pcSelect_stable(adultAll[,100],adultAll[,-100], alpha=0.05, verbose=TRUE)
pcSelect_parallel(adultAll[,100],adultAll[,-100], alpha=0.05, verbose=TRUE)
pcSelect_parallel(adultAll[,100],adultAll[,-100], alpha=0.05, verbose=TRUE, num_workers=3)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
?fci_parallel
library(pcalg)
library(parallel)
data("gmG")
p<-ncol(gmG$x)
suffStat<-list(C=cor(gmG$x),n=nrow(gmG$x))
fci_parallel(suffStat, indepTest=gaussCItest, p=p, skel.method="parallel", alpha=0.01, num.cores=2)
library(pcalg)
library(parallel)
data("gmG")
p<-ncol(gmG$x)
suffStat<-list(C=cor(gmG$x),n=nrow(gmG$x))
fci_parallel(suffStat, indepTest=mccor, p=p, skel.method="parallel", alpha=0.01, num.cores=2)
library(bnlearn)
install.packages("bnlearn")
library(bnlearn)
library(pcalg)
library(parallel)
data("gmG")
p<-ncol(gmG$x)
suffStat<-list(C=cor(gmG$x),n=nrow(gmG$x))
fci_parallel(suffStat, indepTest=mccor, p=p, skel.method="parallel", alpha=0.01, num.cores=2)
library(ParallelPC)
library(pcalg)
library(parallel)
data("gmG")
p<-ncol(gmG$x)
suffStat<-list(C=cor(gmG$x),n=nrow(gmG$x))
fci_parallel(suffStat, indepTest=mccor, p=p, skel.method="parallel", alpha=0.01, num.cores=2)
library(pcalg)
library(parallel)
data("gmG")
p<-ncol(gmG$x)
suffStat<-list(C=cor(gmG$x),n=nrow(gmG$x))
fci_parallel(gmG$x, indepTest=mccor, p=p, skel.method="parallel", alpha=0.01, num.cores=2)
library(pcalg)
library(parallel)
data("gmG")
p<-ncol(gmG$x)
suffStat<-list(C=cor(gmG$x),n=nrow(gmG$x))
fci_parallel(gmG$x, indepTest=mi, p=p, skel.method="parallel", alpha=0.01, num.cores=2)
library(pcalg)
library(parallel)
data("gmG")
p<-ncol(gmG$x)
suffStat<-list(C=cor(gmG$x),n=nrow(gmG$x))
fci_parallel(gmG$x, indepTest=zf, p=p, skel.method="parallel", alpha=0.01, num.cores=2)
library(pcalg)
library(parallel)
data("gmG")
p<-ncol(gmG$x)
suffStat<-list(C=cor(gmG$x),n=nrow(gmG$x))
fci_parallel(gmG$x, indepTest=gaussCItest, p=p, skel.method="parallel", alpha=0.01, num.cores=2)
library(pcalg)
library(parallel)
data("gmG")
p<-ncol(gmG$x)
suffStat<-list(C=cor(gmG$x),n=nrow(gmG$x))
fci_parallel(gmG$x, indepTest=mig, p=p, skel.method="parallel", alpha=0.01, num.cores=2)
library(ParallelPC)
?FCI_parallel
?fci_parallel
pc_parallel(gmG$x, indepTest=mig, p=p, skel.method="parallel", alpha=0.01, num.cores=2, mem.efficient=TRUE)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
?cor2
library(ParallelPC)
?cor2
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(pcalg)
library(parallel)
data("gmI")
datacsv <- cov(gmI$x)
IDA_parallel(datacsv,1:2,3:4,"parallel",0.01, 2)
library(ParallelPC)
library(ParallelPC)
library(pcalg)
library(parallel)
data("gmI")
datacsv <- cov(gmI$x)
library(ParallelPC)
data("gmI")
datacsv <- cov(gmI$x)
jointIDA_parallel(datacsv,1:2,3:4,method="min", pcmethod="parallel",0.01, 2, technique="RRC")
?jointIDA_parallel
library(ParallelPC)
jointIDA_parallel(datacsv,1:2,3:4,method="min", pcmethod="parallel",0.01, 2, TRUE, technique="RRC")
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
jointIDA_parallel(datacsv,1:2,3:4,method="min", pcmethod="parallel",0.01, 2, technique="RRC")
datacsv <- cov(gmI$x)
library(pcalg)
library(parallel)
data("gmI")
datacsv <- cov(gmI$x)
jointIDA_parallel(datacsv,1:2,3:4,method="min", pcmethod="parallel",0.01, 2, technique="RRC")
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(pcalg)
library(parallel)
data("gmI")
datacsv <- cov(gmI$x)
dim(datacsv)
datacsv
jointIDA_parallel(datacsv,1:2,3, pcmethod="parallel",0.01, 2, technique="RRC")
jointIDA_parallel(datacsv,1:3,6, pcmethod="parallel",0.01, 2, technique="RRC")
jointIDA_parallel(datacsv,1:3,6, pcmethod="stable",0.01, 2, technique="RRC")
load("D:/Dropbox-letd/Dropbox/COLLABORATORS/Thuc-Taosheng/mRNA-TF-miRNA DE20150722/BRCA/BRCA_ok.RData")
ls()
BRCA_miRNA_Normal
m=BRCA_miRNA_Normal
dim(m)
mm=BRCA_Gene_Normal
dim(mm)
head(mm)
m[1:5,1:5]
mm[1:5,1:5]
tf=BRCA_TF_Normal
dim(tf)
dim(mm)
library(ParallelPC)
library(pcalg)
library(parallel)
data("gmG")
p<-ncol(gmG$x)
dataset=gmG$x
pc_parallel(gmG$x, indepTest=cor2, p=p, skel.method="parallel", alpha=0.01, num.cores=2, mem.efficient=TRUE)
library(bnlearn)
library("bnlearn", lib.loc="~/R/R-3.2.0/library")
install.packages("bnlearn")
library(bnlearn)
pc_parallel(gmG$x, indepTest=cor2, p=p, skel.method="parallel", alpha=0.01, num.cores=2, mem.efficient=TRUE)
library(ParallelPC)
pc_parallel(gmG$x, indepTest=cor2, p=p, skel.method="parallel", alpha=0.01, num.cores=2, mem.efficient=TRUE)
library(parallel)
pc_parallel(gmG$x, indepTest=cor2, p=p, skel.method="parallel", alpha=0.01, num.cores=2, mem.efficient=TRUE)
library(pcalg)
pc_parallel(gmG$x, indepTest=cor2, p=p, skel.method="parallel", alpha=0.01, num.cores=2, mem.efficient=TRUE)
library(ParallelPC)
library(ParallelPC)
?fci_stable
?fci_stable
library(ParallelPC)
?fci_stable
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
?jointIDA_parallel
citation('ParallelPC')
citation("miRLAB")
citation("pcalg")
library(ParallelPC)
citation('ParallelPC')
library(ParallelPC)
citation('ParallelPC')
citation("pcalg")
library(ParallelPC)
citation('ParallelPC')
library(ParallelPC)
citation('ParallelPC')
library(ParallelPC)
citation('ParallelPC')
library(ParallelPC)
citation('ParallelPC')
library(ParallelPC)
citation('ParallelPC')
library(ParallelPC)
citation('ParallelPC')
library(ParallelPC)
citation('ParallelPC')
library(ParallelPC)
citation('ParallelPC')
library(ParallelPC)
library(ParallelPC)
library(ParallelPC)
citation("ParallelPC")
